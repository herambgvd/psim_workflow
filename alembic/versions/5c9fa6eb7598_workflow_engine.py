"""
Mako template for generating migration scripts.
"""

"""Workflow Engine

Revision ID: 5c9fa6eb7598
Revises: 
Create Date: 2025-07-01 18:11:39.911021

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5c9fa6eb7598'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflow_definitions',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'INACTIVE', 'DEPRECATED', 'ARCHIVED', name='workflowstatus'), nullable=False),
    sa.Column('definition', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('input_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('output_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('retry_delay_seconds', sa.Integer(), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_workflow_id', sa.UUID(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('instance_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_definitions'))
    )
    op.create_index(op.f('ix_workflow_definitions_created_at'), 'workflow_definitions', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_created_by'), 'workflow_definitions', ['created_by'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_deleted_at'), 'workflow_definitions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_is_deleted'), 'workflow_definitions', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_is_template'), 'workflow_definitions', ['is_template'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_name'), 'workflow_definitions', ['name'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_parent_workflow_id'), 'workflow_definitions', ['parent_workflow_id'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_status'), 'workflow_definitions', ['status'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_updated_at'), 'workflow_definitions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_workflow_definitions_updated_by'), 'workflow_definitions', ['updated_by'], unique=False)
    op.create_index('ix_workflow_name_version', 'workflow_definitions', ['name', 'version'], unique=False)
    op.create_index('ix_workflow_status_active', 'workflow_definitions', ['status'], unique=False, postgresql_where=sa.text("status = 'ACTIVE'"))
    op.create_index('ix_workflow_tags', 'workflow_definitions', ['tags'], unique=False, postgresql_using='gin')
    op.create_table('event_definitions',
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', sa.Enum('USER_ACTION', 'SYSTEM', 'EXTERNAL', 'TIMER', 'ERROR', 'WEBHOOK', name='eventtype'), nullable=False),
    sa.Column('payload_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('handlers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('is_repeatable', sa.Boolean(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_definitions.id'], name=op.f('fk_event_definitions_workflow_id_workflow_definitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event_definitions')),
    sa.UniqueConstraint('workflow_id', 'name', name='uq_event_workflow_name')
    )
    op.create_index(op.f('ix_event_definitions_created_at'), 'event_definitions', ['created_at'], unique=False)
    op.create_index(op.f('ix_event_definitions_created_by'), 'event_definitions', ['created_by'], unique=False)
    op.create_index(op.f('ix_event_definitions_deleted_at'), 'event_definitions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_event_definitions_event_type'), 'event_definitions', ['event_type'], unique=False)
    op.create_index(op.f('ix_event_definitions_is_deleted'), 'event_definitions', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_event_definitions_name'), 'event_definitions', ['name'], unique=False)
    op.create_index(op.f('ix_event_definitions_updated_at'), 'event_definitions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_event_definitions_updated_by'), 'event_definitions', ['updated_by'], unique=False)
    op.create_index(op.f('ix_event_definitions_workflow_id'), 'event_definitions', ['workflow_id'], unique=False)
    op.create_index('ix_event_type_workflow', 'event_definitions', ['event_type', 'workflow_id'], unique=False)
    op.create_table('state_definitions',
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('state_type', sa.Enum('INITIAL', 'INTERMEDIATE', 'FINAL', 'ERROR', 'WAIT', 'PARALLEL', 'CHOICE', name='statetype'), nullable=False),
    sa.Column('entry_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('exit_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('retry_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('position', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('style', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_definitions.id'], name=op.f('fk_state_definitions_workflow_id_workflow_definitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_state_definitions')),
    sa.UniqueConstraint('workflow_id', 'name', name='uq_state_workflow_name')
    )
    op.create_index(op.f('ix_state_definitions_created_at'), 'state_definitions', ['created_at'], unique=False)
    op.create_index(op.f('ix_state_definitions_created_by'), 'state_definitions', ['created_by'], unique=False)
    op.create_index(op.f('ix_state_definitions_deleted_at'), 'state_definitions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_state_definitions_is_deleted'), 'state_definitions', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_state_definitions_name'), 'state_definitions', ['name'], unique=False)
    op.create_index(op.f('ix_state_definitions_state_type'), 'state_definitions', ['state_type'], unique=False)
    op.create_index(op.f('ix_state_definitions_updated_at'), 'state_definitions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_state_definitions_updated_by'), 'state_definitions', ['updated_by'], unique=False)
    op.create_index(op.f('ix_state_definitions_workflow_id'), 'state_definitions', ['workflow_id'], unique=False)
    op.create_index('ix_state_type_workflow', 'state_definitions', ['state_type', 'workflow_id'], unique=False)
    op.create_table('transition_definitions',
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('from_state', sa.String(length=255), nullable=False),
    sa.Column('to_state', sa.String(length=255), nullable=False),
    sa.Column('transition_type', sa.Enum('AUTOMATIC', 'CONDITIONAL', 'MANUAL', 'EVENT', 'TIMEOUT', name='transitiontype'), nullable=False),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('trigger_event', sa.String(length=255), nullable=True),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('delay_seconds', sa.Integer(), nullable=True),
    sa.Column('guard_expression', sa.Text(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_definitions.id'], name=op.f('fk_transition_definitions_workflow_id_workflow_definitions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transition_definitions')),
    sa.UniqueConstraint('workflow_id', 'name', name='uq_transition_workflow_name')
    )
    op.create_index(op.f('ix_transition_definitions_created_at'), 'transition_definitions', ['created_at'], unique=False)
    op.create_index(op.f('ix_transition_definitions_created_by'), 'transition_definitions', ['created_by'], unique=False)
    op.create_index(op.f('ix_transition_definitions_deleted_at'), 'transition_definitions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_transition_definitions_from_state'), 'transition_definitions', ['from_state'], unique=False)
    op.create_index(op.f('ix_transition_definitions_is_deleted'), 'transition_definitions', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_transition_definitions_name'), 'transition_definitions', ['name'], unique=False)
    op.create_index(op.f('ix_transition_definitions_to_state'), 'transition_definitions', ['to_state'], unique=False)
    op.create_index(op.f('ix_transition_definitions_transition_type'), 'transition_definitions', ['transition_type'], unique=False)
    op.create_index(op.f('ix_transition_definitions_trigger_event'), 'transition_definitions', ['trigger_event'], unique=False)
    op.create_index(op.f('ix_transition_definitions_updated_at'), 'transition_definitions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_transition_definitions_updated_by'), 'transition_definitions', ['updated_by'], unique=False)
    op.create_index(op.f('ix_transition_definitions_workflow_id'), 'transition_definitions', ['workflow_id'], unique=False)
    op.create_index('ix_transition_from_state', 'transition_definitions', ['workflow_id', 'from_state'], unique=False)
    op.create_index('ix_transition_to_state', 'transition_definitions', ['workflow_id', 'to_state'], unique=False)
    op.create_index('ix_transition_trigger', 'transition_definitions', ['trigger_event'], unique=False)
    op.create_table('workflow_instances',
    sa.Column('workflow_definition_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('CREATED', 'RUNNING', 'WAITING', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', 'TIMEOUT', 'TERMINATED', name='instancestatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'CRITICAL', name='priority'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('timeout_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('input_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('output_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('context_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_instance_id', sa.UUID(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('correlation_id', sa.String(length=255), nullable=True),
    sa.Column('step_count', sa.Integer(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.CheckConstraint('retry_count <= max_retries', name=op.f('ck_workflow_instances_ck_retry_count_limit')),
    sa.ForeignKeyConstraint(['parent_instance_id'], ['workflow_instances.id'], name=op.f('fk_workflow_instances_parent_instance_id_workflow_instances')),
    sa.ForeignKeyConstraint(['workflow_definition_id'], ['workflow_definitions.id'], name=op.f('fk_workflow_instances_workflow_definition_id_workflow_definitions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_instances'))
    )
    op.create_index('ix_instance_correlation', 'workflow_instances', ['correlation_id'], unique=False)
    op.create_index('ix_instance_external', 'workflow_instances', ['external_id'], unique=False)
    op.create_index('ix_instance_running', 'workflow_instances', ['status'], unique=False, postgresql_where=sa.text("status = 'RUNNING'"))
    op.create_index('ix_instance_scheduled', 'workflow_instances', ['scheduled_at'], unique=False, postgresql_where=sa.text("status = 'CREATED'"))
    op.create_index('ix_instance_status_priority', 'workflow_instances', ['status', 'priority'], unique=False)
    op.create_index('ix_instance_tags', 'workflow_instances', ['tags'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_workflow_instances_completed_at'), 'workflow_instances', ['completed_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_correlation_id'), 'workflow_instances', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_workflow_instances_created_at'), 'workflow_instances', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_created_by'), 'workflow_instances', ['created_by'], unique=False)
    op.create_index(op.f('ix_workflow_instances_deleted_at'), 'workflow_instances', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_external_id'), 'workflow_instances', ['external_id'], unique=False)
    op.create_index(op.f('ix_workflow_instances_is_deleted'), 'workflow_instances', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_workflow_instances_last_activity_at'), 'workflow_instances', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_name'), 'workflow_instances', ['name'], unique=False)
    op.create_index(op.f('ix_workflow_instances_parent_instance_id'), 'workflow_instances', ['parent_instance_id'], unique=False)
    op.create_index(op.f('ix_workflow_instances_priority'), 'workflow_instances', ['priority'], unique=False)
    op.create_index(op.f('ix_workflow_instances_scheduled_at'), 'workflow_instances', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_started_at'), 'workflow_instances', ['started_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_status'), 'workflow_instances', ['status'], unique=False)
    op.create_index(op.f('ix_workflow_instances_timeout_at'), 'workflow_instances', ['timeout_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_updated_at'), 'workflow_instances', ['updated_at'], unique=False)
    op.create_index(op.f('ix_workflow_instances_updated_by'), 'workflow_instances', ['updated_by'], unique=False)
    op.create_index(op.f('ix_workflow_instances_workflow_definition_id'), 'workflow_instances', ['workflow_definition_id'], unique=False)
    op.create_table('execution_contexts',
    sa.Column('workflow_instance_id', sa.UUID(), nullable=False),
    sa.Column('current_state', sa.String(length=255), nullable=False),
    sa.Column('previous_state', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', 'TIMEOUT', 'WAITING', name='executionstatus'), nullable=False),
    sa.Column('variables', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('input_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('output_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('transition_count', sa.Integer(), nullable=False),
    sa.Column('task_count', sa.Integer(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('checkpoint_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_checkpoint_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_instance_id'], ['workflow_instances.id'], name=op.f('fk_execution_contexts_workflow_instance_id_workflow_instances'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_execution_contexts'))
    )
    op.create_index('ix_context_activity', 'execution_contexts', ['last_activity_at'], unique=False)
    op.create_index('ix_context_duration', 'execution_contexts', ['started_at', 'completed_at'], unique=False)
    op.create_index('ix_context_status_state', 'execution_contexts', ['status', 'current_state'], unique=False)
    op.create_index(op.f('ix_execution_contexts_completed_at'), 'execution_contexts', ['completed_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_created_at'), 'execution_contexts', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_created_by'), 'execution_contexts', ['created_by'], unique=False)
    op.create_index(op.f('ix_execution_contexts_current_state'), 'execution_contexts', ['current_state'], unique=False)
    op.create_index(op.f('ix_execution_contexts_deleted_at'), 'execution_contexts', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_is_deleted'), 'execution_contexts', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_execution_contexts_last_activity_at'), 'execution_contexts', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_previous_state'), 'execution_contexts', ['previous_state'], unique=False)
    op.create_index(op.f('ix_execution_contexts_started_at'), 'execution_contexts', ['started_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_status'), 'execution_contexts', ['status'], unique=False)
    op.create_index(op.f('ix_execution_contexts_updated_at'), 'execution_contexts', ['updated_at'], unique=False)
    op.create_index(op.f('ix_execution_contexts_updated_by'), 'execution_contexts', ['updated_by'], unique=False)
    op.create_index(op.f('ix_execution_contexts_workflow_instance_id'), 'execution_contexts', ['workflow_instance_id'], unique=False)
    op.create_table('execution_history',
    sa.Column('workflow_instance_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.Enum('INSTANCE_CREATED', 'INSTANCE_STARTED', 'INSTANCE_PAUSED', 'INSTANCE_RESUMED', 'INSTANCE_COMPLETED', 'INSTANCE_FAILED', 'INSTANCE_CANCELLED', 'INSTANCE_TIMEOUT', 'STATE_ENTERED', 'STATE_EXITED', 'TRANSITION_EXECUTED', 'TASK_STARTED', 'TASK_COMPLETED', 'TASK_FAILED', 'EVENT_RECEIVED', 'EVENT_PROCESSED', 'ERROR_OCCURRED', 'RETRY_ATTEMPTED', 'VARIABLE_SET', 'CHECKPOINT_CREATED', name='historyeventtype'), nullable=False),
    sa.Column('event_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('from_state', sa.String(length=255), nullable=True),
    sa.Column('to_state', sa.String(length=255), nullable=True),
    sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('actor_type', sa.String(length=50), nullable=True),
    sa.Column('actor_id', sa.String(length=255), nullable=True),
    sa.Column('execution_context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_instance_id'], ['workflow_instances.id'], name=op.f('fk_execution_history_workflow_instance_id_workflow_instances'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_execution_history'))
    )
    op.create_index(op.f('ix_execution_history_created_at'), 'execution_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_history_created_by'), 'execution_history', ['created_by'], unique=False)
    op.create_index(op.f('ix_execution_history_deleted_at'), 'execution_history', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_execution_history_event_name'), 'execution_history', ['event_name'], unique=False)
    op.create_index(op.f('ix_execution_history_event_timestamp'), 'execution_history', ['event_timestamp'], unique=False)
    op.create_index(op.f('ix_execution_history_event_type'), 'execution_history', ['event_type'], unique=False)
    op.create_index(op.f('ix_execution_history_from_state'), 'execution_history', ['from_state'], unique=False)
    op.create_index(op.f('ix_execution_history_is_deleted'), 'execution_history', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_execution_history_to_state'), 'execution_history', ['to_state'], unique=False)
    op.create_index(op.f('ix_execution_history_updated_at'), 'execution_history', ['updated_at'], unique=False)
    op.create_index(op.f('ix_execution_history_updated_by'), 'execution_history', ['updated_by'], unique=False)
    op.create_index(op.f('ix_execution_history_workflow_instance_id'), 'execution_history', ['workflow_instance_id'], unique=False)
    op.create_index('ix_history_event_type', 'execution_history', ['event_type'], unique=False)
    op.create_index('ix_history_instance_sequence', 'execution_history', ['workflow_instance_id', 'sequence_number'], unique=False)
    op.create_index('ix_history_states', 'execution_history', ['from_state', 'to_state'], unique=False)
    op.create_index('ix_history_timestamp', 'execution_history', ['event_timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_history_timestamp', table_name='execution_history')
    op.drop_index('ix_history_states', table_name='execution_history')
    op.drop_index('ix_history_instance_sequence', table_name='execution_history')
    op.drop_index('ix_history_event_type', table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_workflow_instance_id'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_updated_by'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_updated_at'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_to_state'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_is_deleted'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_from_state'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_event_type'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_event_timestamp'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_event_name'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_deleted_at'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_created_by'), table_name='execution_history')
    op.drop_index(op.f('ix_execution_history_created_at'), table_name='execution_history')
    op.drop_table('execution_history')
    op.drop_index(op.f('ix_execution_contexts_workflow_instance_id'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_updated_by'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_updated_at'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_status'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_started_at'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_previous_state'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_last_activity_at'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_is_deleted'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_deleted_at'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_current_state'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_created_by'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_created_at'), table_name='execution_contexts')
    op.drop_index(op.f('ix_execution_contexts_completed_at'), table_name='execution_contexts')
    op.drop_index('ix_context_status_state', table_name='execution_contexts')
    op.drop_index('ix_context_duration', table_name='execution_contexts')
    op.drop_index('ix_context_activity', table_name='execution_contexts')
    op.drop_table('execution_contexts')
    op.drop_index(op.f('ix_workflow_instances_workflow_definition_id'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_updated_by'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_updated_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_timeout_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_status'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_started_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_scheduled_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_priority'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_parent_instance_id'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_name'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_last_activity_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_is_deleted'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_external_id'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_deleted_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_created_by'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_created_at'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_correlation_id'), table_name='workflow_instances')
    op.drop_index(op.f('ix_workflow_instances_completed_at'), table_name='workflow_instances')
    op.drop_index('ix_instance_tags', table_name='workflow_instances', postgresql_using='gin')
    op.drop_index('ix_instance_status_priority', table_name='workflow_instances')
    op.drop_index('ix_instance_scheduled', table_name='workflow_instances', postgresql_where=sa.text("status = 'CREATED'"))
    op.drop_index('ix_instance_running', table_name='workflow_instances', postgresql_where=sa.text("status = 'RUNNING'"))
    op.drop_index('ix_instance_external', table_name='workflow_instances')
    op.drop_index('ix_instance_correlation', table_name='workflow_instances')
    op.drop_table('workflow_instances')
    op.drop_index('ix_transition_trigger', table_name='transition_definitions')
    op.drop_index('ix_transition_to_state', table_name='transition_definitions')
    op.drop_index('ix_transition_from_state', table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_workflow_id'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_updated_by'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_updated_at'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_trigger_event'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_transition_type'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_to_state'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_name'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_is_deleted'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_from_state'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_deleted_at'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_created_by'), table_name='transition_definitions')
    op.drop_index(op.f('ix_transition_definitions_created_at'), table_name='transition_definitions')
    op.drop_table('transition_definitions')
    op.drop_index('ix_state_type_workflow', table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_workflow_id'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_updated_by'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_updated_at'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_state_type'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_name'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_is_deleted'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_deleted_at'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_created_by'), table_name='state_definitions')
    op.drop_index(op.f('ix_state_definitions_created_at'), table_name='state_definitions')
    op.drop_table('state_definitions')
    op.drop_index('ix_event_type_workflow', table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_workflow_id'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_updated_by'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_updated_at'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_name'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_is_deleted'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_event_type'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_deleted_at'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_created_by'), table_name='event_definitions')
    op.drop_index(op.f('ix_event_definitions_created_at'), table_name='event_definitions')
    op.drop_table('event_definitions')
    op.drop_index('ix_workflow_tags', table_name='workflow_definitions', postgresql_using='gin')
    op.drop_index('ix_workflow_status_active', table_name='workflow_definitions', postgresql_where=sa.text("status = 'ACTIVE'"))
    op.drop_index('ix_workflow_name_version', table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_updated_by'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_updated_at'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_status'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_parent_workflow_id'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_name'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_is_template'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_is_deleted'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_deleted_at'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_created_by'), table_name='workflow_definitions')
    op.drop_index(op.f('ix_workflow_definitions_created_at'), table_name='workflow_definitions')
    op.drop_table('workflow_definitions')
    # ### end Alembic commands ###